generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id             Int           @id @default(autoincrement())
  userId         String        @unique
  fullName       String?
  email          String        @unique
  platform       String?
  admin          Boolean       @default(false)
  verified       Boolean       @default(false)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime?
  balance        balance?
  subscriptions  subscription[]
  leaveRequests  leaveRequest[]
}

model subscription {
  id             Int           @id @default(autoincrement())
  userId         String
  subPlan        String?
  subSlot        Int           // Changed to Int
  subDuration    String
  subAmount      String
  subEmail       String
  subPassword    String
  status         String        @default("pending")
  subId          String        @unique
  subCategory    String?
  subSubCategory String?
  shareType      String?       @default("login")
  subRemSlot     Int?          // Changed to Int
  crew           String[]      @default([])
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  user           users         @relation(fields: [userId], references: [userId])
  leaveRequests  leaveRequest[]
}

model balance {
  userId         String        @id
  balance        Int?          @default(50)
  withdrawn      Int?          @default(0)
  user           users         @relation(fields: [userId], references: [userId])
  createdAt      DateTime      @default(now())
  updatedAt      DateTime?
}

model leaveRequest {
  id             Int           @id @default(autoincrement())
  userId         String
  subId          String
  status         String?       @default("pending")
  createdAt      DateTime?     @default(now())
  expiresAt      DateTime?
  user           users         @relation(fields: [userId], references: [userId])
  subscription   subscription   @relation(fields: [subId], references: [subId])
}